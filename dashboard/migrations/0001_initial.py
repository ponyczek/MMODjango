# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2018-03-31 20:50
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('experience', models.PositiveIntegerField()),
                ('level', models.PositiveIntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arm', models.PositiveIntegerField(default=0)),
                ('defence', models.PositiveIntegerField(default=0)),
                ('atk', models.PositiveIntegerField(default=0)),
                ('type', models.CharField(choices=[('1', 'Helmet'), ('2', 'Armor'), ('3', 'Shield'), ('4', 'Weapon')], max_length=1)),
                ('drop_chance', models.PositiveIntegerField(default=1)),
                ('name', models.CharField(default='', max_length=50)),
                ('sprite_url', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Monster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
                ('experience', models.PositiveIntegerField(default=1)),
                ('gold', models.PositiveIntegerField(default=0)),
                ('health', models.PositiveIntegerField(default=1)),
                ('sprite_url', models.CharField(max_length=200)),
                ('items', models.ManyToManyField(to='dashboard.Item')),
            ],
        ),
        migrations.CreateModel(
            name='UserItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipped', models.BooleanField(default=False)),
                ('on_market', models.BooleanField(default=False)),
                ('price', models.PositiveIntegerField(default=1)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Item')),
            ],
        ),
        migrations.CreateModel(
            name='UserMonster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('health_left', models.PositiveIntegerField()),
                ('monster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Monster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.PositiveIntegerField(default=0)),
                ('gold', models.PositiveIntegerField(default=0)),
                ('items', models.ManyToManyField(through='dashboard.UserItem', to='dashboard.Item')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='useritem',
            name='userprofile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.UserProfile'),
        ),
        migrations.AddField(
            model_name='item',
            name='monsters',
            field=models.ManyToManyField(to='dashboard.Monster'),
        ),
    ]
